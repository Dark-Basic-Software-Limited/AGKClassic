<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>Multidimensional arrays - AGK Help</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<script type="text/javascript" src="../main.js"></script>
<link href="../main.css" rel="styleSheet" type="text/css" />
<link href="../prettify.css" rel="styleSheet" type="text/css" />
<script type="text/javascript" src="../prettify.js"></script>
<script type="text/javascript" src="../lang-agk.js"></script>
<link rel="stylesheet" href="../lightbox/css/lightbox.min.css">
<script src="../lightbox/js/lightbox-plus-jquery.min.js"></script>
<script src="../clipboard/clipboard.min.js"></script>
</head>
<body>
<script>var clipboard = new Clipboard('.btn');
clipboard.on('success', function(e)
{
console.log(e);
});
clipboard.on('error', function(e)
{
console.log(e);
});
</script>
<div class="header" style="background: #000 url('../gfx/header-back.png') top center no-repeat;"><div><div class="navigation"><a href="../home.html"><img src="../gfx/b-home.png" width="76" height="44" alt=""></a><a href="javascript:history.go(-1)"><img src="../gfx/b-back.png" width="71" height="44" alt=""></a><a href="javascript:window.print()"><img src="../gfx/b-print.png" width="75" height="44" alt=""></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../gfx/lang-c.png" width="253" height="44" alt=""  id="basicCodeBlock0" border="0"></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../gfx/lang-basic.png" width="253" height="44" alt=""  id="cppCodeBlock0" style="display:none" border="0"></a></div><a href="http://www.appgamekit.com" target="_blank"><img class="logo" src="../gfx/agk-logo.png" height="44" style="margin:15px 0" alt="App Game Kit" border="0"></a></div><img src="../gfx/drop-shadow.png" width="1158" height="40" alt=""></div><div class="breadcrumbs">
<a href="../home.html">Home</a> &gt; <a href="../guides.html">Guides</a> &gt; Multidimensional arrays</div><div class="page"><h1>Multidimensional arrays</h1><p>In order to figure out what multidimensional arrays and why they should be used let's first examine a program with a simple scenario, that declares a single dimensional array with a size of 5, to hold scores for a game.</p><div id="basicCodeBlock1" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">score as integer [ 5 ]
<br>
score [ 1 ] = 10
score [ 2 ] = 20
score [ 3 ] = 30
score [ 4 ] = 40
score [ 5 ] = 50
<br>
do
	for i = 1 to 5
		print ( score [ i ] )
	next i
	<br>
	sync ( )
loop
</pre></div><div align="right"><button class="btn" data-clipboard-text="score as integer [ 5 ]

score [ 1 ] = 10
score [ 2 ] = 20
score [ 3 ] = 30
score [ 4 ] = 40
score [ 5 ] = 50

do
	for i = 1 to 5
		print ( score [ i ] )
	next i

	sync ( )
loop
">Copy Code</button></div><p>The first element in the array gets set to 10, the second to 20, the third to 30, the fourth to 40 and the fifth to 50. All of this information gets printed out using the <i>for</i> loop.</p><p>Now imagine a situation where you wanted to keep track of scores for separate groups of players. Say you had 2 groups of 5 players. You could simply increase the size of the array to 10 and store the second groups players in elements 6 to 10. This would work but it not's particularly clear as it may not be so obvious that elements 6 to 10 of the array are for another group of players. Some problems might also be caused if the group suddenly found itself with a few extra players. In this instance another solution is required and this is where multidimensional arrays come into use. The <i>score</i> array could be declared like this.</p><div id="basicCodeBlock2" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">score as integer [ 2, 5 ]
</pre></div><div align="right"><button class="btn" data-clipboard-text="score as integer [ 2, 5 ]
">Copy Code</button></div><p>This means it has 2 groups of 5 values. To add an extra dimension to an array a comma is used, followed by the size of the new dimension, up to a maximum of 6 dimensions. By using a multidimensional array it becomes much easier to deal with player's scores. Here's a modified version of the program that handles the scores for 2 groups of 5 players.</p><div id="basicCodeBlock3" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">score as integer [ 2, 5 ]
<br>
score [ 1, 1 ] = 10
score [ 1, 2 ] = 20
score [ 1, 3 ] = 30
score [ 1, 4 ] = 40
score [ 1, 5 ] = 50
<br>
score [ 2, 1 ] = 100
score [ 2, 2 ] = 200
score [ 2, 3 ] = 300
score [ 2, 4 ] = 400
score [ 2, 5 ] = 500
<br>
do
	for i = 1 to 2
		for j = 1 to 5
			print ( score [ i, j ] )
		next j
		<br>
		print ( "" )
	next i
	<br>
	sync ( )
loop
</pre></div><div align="right"><button class="btn" data-clipboard-text="score as integer [ 2, 5 ]

score [ 1, 1 ] = 10
score [ 1, 2 ] = 20
score [ 1, 3 ] = 30
score [ 1, 4 ] = 40
score [ 1, 5 ] = 50

score [ 2, 1 ] = 100
score [ 2, 2 ] = 200
score [ 2, 3 ] = 300
score [ 2, 4 ] = 400
score [ 2, 5 ] = 500

do
	for i = 1 to 2
		for j = 1 to 5
			print ( score [ i, j ] )
		next j

		print ( &quot;&quot; )
	next i

	sync ( )
loop
">Copy Code</button></div><p>The first block of code deals with assigning scores to group 1 of the array, whilst the second group assigns scores to group 2. This results in us having two nicely managed compartments of data. We know that group 1 contains 5 lots of scores for the first set of players. Group 2 contains 5 lots of scores for the second set of players.</p><p>Notice that when referring to the array the parameters that control which element you are accessing must match the size of the array. If you have 2 dimensional array then you must specify 2 parameters to access the parts of the array.</p><p>In the event that another set of players joined the game then the first dimension could be increased to 3, giving us 3 lots of 5 scores (15 in total). The new array could be declared like this.</p><div id="basicCodeBlock4" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">score as integer [ 3, 5 ]
</pre></div><div align="right"><button class="btn" data-clipboard-text="score as integer [ 3, 5 ]
">Copy Code</button></div><p>Alternatively if more players joined each group the second dimension could be increased e.g.</p><div id="basicCodeBlock5" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">score as integer [ 2, 10 ]
</pre></div><div align="right"><button class="btn" data-clipboard-text="score as integer [ 2, 10 ]
">Copy Code</button></div><p>In which case the array would contain 2 lots of 10 scores (20 in total).</p><p>To add a third dimension to the array it could be declared like this.</p><div id="basicCodeBlock6" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">score as integer [ 2, 3, 4 ]
</pre></div><div align="right"><button class="btn" data-clipboard-text="score as integer [ 2, 3, 4 ]
">Copy Code</button></div><p>This array would have 2 groups, that in turn contain 3 groups, each containing 4 values, resulting in the array being able to store a total of 24 values. Here's a program showing how this array can be used.</p><div id="basicCodeBlock7" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">score as integer [ 2, 3, 4 ]
<br>
score [ 1, 1, 1 ] = 10
score [ 1, 1, 2 ] = 20
score [ 1, 1, 3 ] = 30
score [ 1, 1, 4 ] = 40
<br>
score [ 1, 2, 1 ] = 50
score [ 1, 2, 2 ] = 60
score [ 1, 2, 3 ] = 70
score [ 1, 2, 4 ] = 80
<br>
score [ 1, 3, 1 ] = 90
score [ 1, 3, 2 ] = 100
score [ 1, 3, 3 ] = 110
score [ 1, 3, 4 ] = 120
<br>
score [ 2, 1, 1 ] = 100
score [ 2, 1, 2 ] = 200
score [ 2, 1, 3 ] = 300
score [ 2, 1, 4 ] = 400
<br>
score [ 2, 2, 1 ] = 500
score [ 2, 2, 2 ] = 600
score [ 2, 2, 3 ] = 700
score [ 2, 2, 4 ] = 800
<br>
score [ 2, 3, 1 ] = 900
score [ 2, 3, 2 ] = 1000
score [ 2, 3, 3 ] = 1100
score [ 2, 3, 4 ] = 1200
<br>
do
	for i = 1 to 2
		for j = 1 to 3
			for k = 1 to 4
				print ( score [ i, j, k ] )
			next k
		next j
	next i
	<br>
	sync ( )
loop
</pre></div><div align="right"><button class="btn" data-clipboard-text="score as integer [ 2, 3, 4 ]

score [ 1, 1, 1 ] = 10
score [ 1, 1, 2 ] = 20
score [ 1, 1, 3 ] = 30
score [ 1, 1, 4 ] = 40

score [ 1, 2, 1 ] = 50
score [ 1, 2, 2 ] = 60
score [ 1, 2, 3 ] = 70
score [ 1, 2, 4 ] = 80

score [ 1, 3, 1 ] = 90
score [ 1, 3, 2 ] = 100
score [ 1, 3, 3 ] = 110
score [ 1, 3, 4 ] = 120

score [ 2, 1, 1 ] = 100
score [ 2, 1, 2 ] = 200
score [ 2, 1, 3 ] = 300
score [ 2, 1, 4 ] = 400

score [ 2, 2, 1 ] = 500
score [ 2, 2, 2 ] = 600
score [ 2, 2, 3 ] = 700
score [ 2, 2, 4 ] = 800

score [ 2, 3, 1 ] = 900
score [ 2, 3, 2 ] = 1000
score [ 2, 3, 3 ] = 1100
score [ 2, 3, 4 ] = 1200

do
	for i = 1 to 2
		for j = 1 to 3
			for k = 1 to 4
				print ( score [ i, j, k ] )
			next k
		next j
	next i

	sync ( )
loop
">Copy Code</button></div><p>What's so useful about being able to use multidimensional arrays is that you can quite easily group some data together. While the example shown here is quite simple it should at least you give some kind of idea as to what might be possible.</p><div align="center"><a href="arrays_006.htm"><img src="../gfx/prev.png"  alt=""></a> &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<a href="arrays_0062.htm"><img src="../gfx/next.png"  alt=""></a></div><br><br></div><div class="footer" style="background: #000 url('../gfx/footer-back.png') top center no-repeat;"><div><p><a href="http://www.thegamecreators.com" target="_blank" style="float:none"><img style="float:right;margin-top:2px" src="../gfx/tgc-logo.png" width="188" height="27" alt="" border="0"></a><br><strong>App Game Kit</strong> &nbsp;&copy; The Game Creators Ltd. All Rights Reserved.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="mailto:agkreports@thegamecreators.com" style="float:none"><font color="FFFFFF">Report an issue</font></a></p></p></div></div><script type="text/javascript">prettyPrint(true);</script></body></html>