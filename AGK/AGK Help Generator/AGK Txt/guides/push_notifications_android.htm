<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>Android Push Notifications - AGK Help</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<script type="text/javascript" src="../main.js"></script>
<link href="../main.css" rel="styleSheet" type="text/css" />
<link href="../prettify.css" rel="styleSheet" type="text/css" />
<script type="text/javascript" src="../prettify.js"></script>
<script type="text/javascript" src="../lang-agk.js"></script>
<link rel="stylesheet" href="../lightbox/css/lightbox.min.css">
<script src="../lightbox/js/lightbox-plus-jquery.min.js"></script>
<script src="../clipboard/clipboard.min.js"></script>
<script type="text/javascript" src="https://www.appgamekit.com/assets/js/docs-jquery.min.js"></script>
<script type="text/javascript" src="https://www.appgamekit.com/assets/js/docs-translate.js"></script>
</head>
<body>
<script>var clipboard = new Clipboard('.btn');
clipboard.on('success', function(e)
{
console.log(e);
});
clipboard.on('error', function(e)
{
console.log(e);
});
</script>
<div class="header" style="background: #000 url('../gfx/header-back.png') top center no-repeat;"><div><div class="navigation"><a href="../home.html"><img src="../gfx/b-home.png" width="76" height="44" alt=""></a><a href="javascript:history.go(-1)"><img src="../gfx/b-back.png" width="71" height="44" alt=""></a><a href="javascript:window.print()"><img src="../gfx/b-print.png" width="75" height="44" alt=""></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../gfx/lang-c.png" width="253" height="44" alt=""  id="basicCodeBlock0" border="0"></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../gfx/lang-basic.png" width="253" height="44" alt=""  id="cppCodeBlock0" style="display:none" border="0"></a></div><a href="https://www.appgamekit.com" target="_blank"><img class="logo" src="../gfx/agk-logo.png" height="44" style="margin:15px 0" alt="App Game Kit" border="0"></a></div><img src="../gfx/drop-shadow.png" width="1158" height="40" alt=""></div><div class="breadcrumbs">
<a href="../home.html">Home</a> &gt; <a href="../guides.html">Guides</a> &gt; Android Push Notifications</div><div class="page"><h1>Android Push Notifications</h1><h2>Before you begin</h2><p>You will need a server capable of running PHP scripts for this example to work</p><p>Note that these notifications will not work on Amazon or Ouya devices</p><p>Push Notifications on Android are handled by the Firebase Cloud Messaging API, You will need to create a Firebase project for your app in the Firebase console here <a href="https://console.firebase.google.com/">https://console.firebase.google.com</a>.</p><p>In the Firebase console project settings you should see a tab labelled "Cloud Messaging". In there should be a field called "Server key", you will need this for the PHP script. You will also need the "SenderID" field also on this page</p><h2>Implementation</h2><p>Two android projects (interpreter_android_google, and template_android_google) are setup to use Push Notifications, the instructions are the same for both of these projects.</p><p>In your tier 1 code first call SetPushNotificationKeys with your SenderID value like so </p><div id="basicCodeBlock1" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">SetPushNotificationKeys( "SenderID", "9102938475" )
</pre></div><div align="right"><button class="btn" data-clipboard-text="SetPushNotificationKeys( &quot;SenderID&quot;, &quot;9102938475&quot; )
">Copy Code</button></div><p>The "SenderID" field is case sensitive and must be exactly as above, the senderID value should be all numbers. After that you can call PushNotificationSetup(). If this returns 0 then this platform does not support push notifications. Otherwise wait for GetPushNotificationToken() to return something other than an empty string, if it returns "Error" then something went wrong. Once you have the token you need to send it to your server, you might also want to send some identifying information like a userID so you know who this token belongs to. The code we use looks something like this</p><div id="basicCodeBlock2" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">g_Net_UserID = 01234 // some user ID that your server can use to recognise whos key this is
result = PushNotificationSetup()
if ( result = 1 )
    token = GetPushNotificationToken()
    while ( token = "" )
        token = GetPushNotificationToken()
    endwhile
    params$ = "token="+token+"&platform="+getdevicebasename() + "&id=" + str(g_Net_UserID)
    SendHTTPRequestASync( conn, "sendToken.php", params$ ) // we do not need the server to return anything so we can ignore getting the response
endif
</pre></div><div align="right"><button class="btn" data-clipboard-text="g_Net_UserID = 01234 // some user ID that your server can use to recognise whos key this is
result = PushNotificationSetup()
if ( result = 1 )
    token = GetPushNotificationToken()
    while ( token = &quot;&quot; )
        token = GetPushNotificationToken()
    endwhile
    params$ = &quot;token=&quot;+token+&quot;&platform=&quot;+getdevicebasename() + &quot;&id=&quot; + str(g_Net_UserID)
    SendHTTPRequestASync( conn, &quot;sendToken.php&quot;, params$ ) // we do not need the server to return anything so we can ignore getting the response
endif
">Copy Code</button></div><p>In this example we also send the output of GetDeviceBaseName so we know which platform this token belongs to, iOS and Android use different methods. The server will need to remember the token and who it belongs to so you can send them push notifications later, be aware that the tokens can be 183 characters or more in the case of Android. The device takes no further action after this, it simply sends off its token and the server decides when to send a notification.</p><p>When you want to send a notification to an Android device use the following PHP script to send a message to a particular device token, replacing the $apiKey field with your API key generated earlier. For example when two users are playing a turn based game and one device notifies your server it has finished its turn, the server can use the user ID to find the token that belongs to the opponent and send them a notification.</p><div id="basicCodeBlock3" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">function SendPushNotificationAndroid( $deviceToken, $message )
{
    // Replace with real SERVER API key from Google APIs
    $apiKey = "Server Key From Firebase Console";
 
    // Set POST variables
    $url = 'https://fcm.googleapis.com/fcm/send';
 
    $fields = array(
        'to'   => $deviceToken,
        'notification' => array( "body" => $message ),
    );
 
    $headers = array( 
       'Authorization: key=' . $apiKey,
       'Content-Type: application/json'
    );
     
    // Open connection
    $ch = curl_init();
 
    // Set the url, number of POST vars, POST data
    curl_setopt( $ch, CURLOPT_URL, $url );
    curl_setopt( $ch, CURLOPT_POST, true );
    curl_setopt( $ch, CURLOPT_HTTPHEADER, $headers);
    curl_setopt( $ch, CURLOPT_RETURNTRANSFER, true );
 
    curl_setopt( $ch, CURLOPT_POSTFIELDS, json_encode( $fields ) );
 
    // Execute post
    echo "Sending";
    $result = curl_exec($ch);
 
    // Close connection
    curl_close($ch);
 
    echo "Result: " . $result;
}
</pre></div><div align="right"><button class="btn" data-clipboard-text="function SendPushNotificationAndroid( $deviceToken, $message )
{
    // Replace with real SERVER API key from Google APIs
    $apiKey = &quot;Server Key From Firebase Console&quot;;
 
    // Set POST variables
    $url = 'https://fcm.googleapis.com/fcm/send';
 
    $fields = array(
        'to'   => $deviceToken,
        'notification' => array( &quot;body&quot; => $message ),
    );
 
    $headers = array( 
       'Authorization: key=' . $apiKey,
       'Content-Type: application/json'
    );
     
    // Open connection
    $ch = curl_init();
 
    // Set the url, number of POST vars, POST data
    curl_setopt( $ch, CURLOPT_URL, $url );
    curl_setopt( $ch, CURLOPT_POST, true );
    curl_setopt( $ch, CURLOPT_HTTPHEADER, $headers);
    curl_setopt( $ch, CURLOPT_RETURNTRANSFER, true );
 
    curl_setopt( $ch, CURLOPT_POSTFIELDS, json_encode( $fields ) );
 
    // Execute post
    echo &quot;Sending&quot;;
    $result = curl_exec($ch);
 
    // Close connection
    curl_close($ch);
 
    echo &quot;Result: &quot; . $result;
}
">Copy Code</button></div><p>Note that Firebase also allows sending of messages directly from the Firebase console, if you only want to use this functionality to send messages to all users of your app then you do not need to worry about the device token or having a PHP server.</p><br><br></div><div class="footer" style="background: #000 url('../gfx/footer-back.png') top center no-repeat;"><div><p><a href="https://www.thegamecreators.com" target="_blank" style="float:none"><img style="float:right;margin-top:2px" src="../gfx/tgc-logo.png" width="188" height="27" alt="" border="0"></a><br><strong>App Game Kit</strong> &nbsp;&copy; The Game Creators Ltd. All Rights Reserved.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="mailto:agkreports@thegamecreators.com" style="float:none"><font color="FFFFFF">Report an issue</font></a></p></p></div></div><script type="text/javascript">prettyPrint(true);</script></body></html>