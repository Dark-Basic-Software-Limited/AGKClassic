<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>Creating particles - AGK Help</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<script type="text/javascript" src="../../main.js"></script>
<link href="../../main.css" rel="styleSheet" type="text/css" />
<link href="../../prettify.css" rel="styleSheet" type="text/css" />
<script type="text/javascript" src="../../prettify.js"></script>
<script type="text/javascript" src="../../lang-agk.js"></script>
<link rel="stylesheet" href="../lightbox/css/lightbox.min.css">
<script src="../lightbox/js/lightbox-plus-jquery.min.js"></script>
<script src="../clipboard/clipboard.min.js"></script>
<script type="text/javascript" src="https://www.appgamekit.com/assets/js/docs-jquery.min.js"></script>
<script type="text/javascript" src="https://www.appgamekit.com/assets/js/docs-translate.js"></script>
</head>
<body>
<script>var clipboard = new Clipboard('.btn');
clipboard.on('success', function(e)
{
console.log(e);
});
clipboard.on('error', function(e)
{
console.log(e);
});
</script>
<div class="header" style="background: #000 url('../../gfx/header-back.png') top center no-repeat;"><div><div class="navigation"><a href="../../home.html"><img src="../../gfx/b-home.png" width="76" height="44" alt=""></a><a href="javascript:history.go(-1)"><img src="../../gfx/b-back.png" width="71" height="44" alt=""></a><a href="javascript:window.print()"><img src="../../gfx/b-print.png" width="75" height="44" alt=""></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../../gfx/lang-c.png" width="253" height="44" alt=""  id="basicCodeBlock0" border="0"></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../../gfx/lang-basic.png" width="253" height="44" alt=""  id="cppCodeBlock0" style="display:none" border="0"></a></div><a href="https://www.appgamekit.com" target="_blank"><img class="logo" src="../../gfx/agk-logo.png" height="44" style="margin:15px 0" alt="App Game Kit" border="0"></a></div><img src="../../gfx/drop-shadow.png" width="1158" height="40" alt=""></div><div class="breadcrumbs">
<a href="../../home.html">Home</a> &gt; <a href="../../examples.html">Examples</a> &gt; Creating particles</div><div class="page"><h1>Creating particles</h1><h2>Description</h2><p>Particles can be used for a wide variety of effects such as creating smoke, explosions, stars and much more. In this document the process of creating particles and displaying them on screen is demonstrated.</p><div align="center"><img src="0_creating.jpg"/></div><p><br>This example program relies on an external image named "particle.png". The image uses several shades of white and grey so it is not clearly visible, so for the purposes of this page a negative image is used:</p><div align="center"><img src="particle.png"/></div><h2>Overview</h2><p>Several steps need to take place before particles are ready to be displayed on screen. This list demonstrates the typical process when creating particles:</p><ul><li>create particles</li><li>set an image</li><li>set the emit zone</li><li>set the direction for emitted particles</li><li>set properties such as lifespan and size</li><li>add color key frames</li></ul><h2>Creating particles</h2><p>Just like other resources, particle entities are handled with ID numbers. Itâ€™s possible to create them and manually assign an ID number or have an ID number automatically assigned in the creation process.</p><p>The command to create particles is called <i>CreateParticles</i>. It has either 2 or 3 parameters dependant on usage. If you want an ID number assigned automatically it only takes 2 parameter - position on the X axis and position on the Y axis. If you want to control the ID number it takes 3 parameters - the ID number followed by the position on the X axis and position on the Y axis. Here's an example showing the 2 methods of creating particles:</p><div id="basicCodeBlock1" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">CreateParticles ( 1, 100, 200 )
particles = CreateParticles ( 100, 200 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="CreateParticles ( 1, 100, 200 )
particles = CreateParticles ( 100, 200 )
">Copy Code</button></div><div id="cppCodeBlock2" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::CreateParticles ( 1, 100, 200 );
particles = agk::CreateParticles ( 100, 200 );
</pre></div><p>For this example the approach of assigning ID numbers manually is used.</p><p>Our particle entity will be created with an ID number of 1 and its position set to 150, 10:</p><div id="basicCodeBlock3" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">CreateParticles ( 1, 150, 10 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="CreateParticles ( 1, 150, 10 )
">Copy Code</button></div><div id="cppCodeBlock4" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::CreateParticles ( 1, 150, 10 );
</pre></div><h2>Set an image</h2><p>The next step is to supply an image for the particle. To do this load an image with the <i>LoadImage</i> command and then call the command <i>SetParticlesImage</i> passing in the ID of your particles and then the ID of the image. These lines of code load the image "particle.png" into ID slot 1 and then apply this to the particles:</p><div id="basicCodeBlock5" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">LoadImage ( 1, "particle.png" )
SetParticlesImage ( 1, 1 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="LoadImage ( 1, &quot;particle.png&quot; )
SetParticlesImage ( 1, 1 )
">Copy Code</button></div><div id="cppCodeBlock6" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::LoadImage ( 1, "particle.png" );
agk::SetParticlesImage ( 1, 1 );
</pre></div><h2>The emit zone</h2><p>Particles can either emit from their position or from a particular zone. The command <i>SetParticlesStartZone</i> allows you to specify a particular area from where particles will be emitted. This command takes several parameters: ID number of the particles, the X coordinate of the top left corner of the start zone, the Y coordinate of the top left corner of the start zone, X coordinate of the bottom right corner of the start zone and finally a Y coordinate of the bottom right corner of the start zones. Coordinates for the start zone are relative to the position of the particle entity, therefore if a particle entity was positioned at 150, 10 and the start zone was set to -10, 0, 10, 0 then particles would be emitted from 140, 10 to 160, 10.</p><p>For our example the particles will be emitted from a fairly large zone that expands by 100 pixels on each side of the original position, with a little variation on the Y axis:</p><div id="basicCodeBlock7" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">SetParticlesStartZone ( 1, -100, -10, 100, 10 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="SetParticlesStartZone ( 1, -100, -10, 100, 10 )
">Copy Code</button></div><div id="cppCodeBlock8" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::SetParticlesStartZone ( 1, -100, -10, 100, 10 );
</pre></div><p>Our starting position is 150, 10 so particles will be emitted within the box 50, 0 (top left) to 250, 20 (bottom right).</p><p>If no start zone is defined then all particles will emit from the position 150, 10.</p><h2>Direction of particles</h2><p>In the majority of cases you will want to specify a direction for particles. The command <i>SetParticlesDirection</i> controls the direction in which particles are emitted. This command takes three parameters: ID number of the particles, direction on the X axis and direction on the Y axis. To move our particles down the screen this command is called with no direction on the X axis and a value of 50 on the Y axis:</p><div id="basicCodeBlock9" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">SetParticlesDirection ( 1, 0, 50 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="SetParticlesDirection ( 1, 0, 50 )
">Copy Code</button></div><div id="cppCodeBlock10" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::SetParticlesDirection ( 1, 0, 50 );
</pre></div><p>Increasing the direction value will result in particles being emitted at a fast speed, while decreasing the value will have the opposite effect.</p><h2>Properties</h2><p>Particles have several properties that control the way in which they behave. Properties include the life span of particles, their size, a range of angles for being emitted and the frequency. By altering these properties it's possible to completely change the effect of particles.</p><p>The command <i>SetParticlesLife</i> determines how long each particle should live for. It takes two parameters: the ID number of the particles and a value controlling the life span (specified as a time). In this example all particles are set to live (be active and on screen) for 9 seconds:</p><div id="basicCodeBlock11" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">SetParticlesLife ( 1, 9 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="SetParticlesLife ( 1, 9 )
">Copy Code</button></div><div id="cppCodeBlock12" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::SetParticlesLife ( 1, 9 );
</pre></div><p>After a particle has been active for 9 seconds it will disappear.</p><p>The command <i>SetParticlesSize</i> controls the size of particles. It takes two parameters: the ID number of the particles and a value controlling the size. Given that it's likely for particles to be high in number, it's often the case that they are small e.g 64 pixels or less. It's advisable to keep this size relatively low for performance reasons.</p><p>The command <i>SetParticlesAngle</i> can be used to control the range of variation from the initial direction. This can be useful to create a more natural effect instead of particles simply falling down in a constant direction. Only two parameters are required for this command: the ID number of the particles and a value controlling the angle. In our case an angle of 15 is set:</p><div id="basicCodeBlock13" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">SetParticlesAngle ( 1, 15 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="SetParticlesAngle ( 1, 15 )
">Copy Code</button></div><div id="cppCodeBlock14" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::SetParticlesAngle ( 1, 15 );
</pre></div><p>The frequency of particles determines how many particles are produced per second. A high value will result in many particles being emitted, while a low value will have the opposite effect. Our particles are emitted at a rate of 60 per second through the use of the command <i>SetParticlesFrequency</i>. This command takes two parameters: an ID number for the particles and a value controlling how many particles are produced per second.</p><div id="basicCodeBlock15" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">SetParticlesFrequency ( 1, 60 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="SetParticlesFrequency ( 1, 60 )
">Copy Code</button></div><div id="cppCodeBlock16" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::SetParticlesFrequency ( 1, 60 );
</pre></div><p>Another command, <i>SetParticlesVelocityRange</i> is useful for ensuring your particles move at a random velocity within a given range. This command takes three parameters: ID number of the particles, minimum multiplier for velocity and maximum mulitplier for velocity. With this call we set a range whereby our particles can move by 1x the initial velocity up to 4x:</p><div id="basicCodeBlock17" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">SetParticlesVelocityRange ( 1, 1, 4 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="SetParticlesVelocityRange ( 1, 1, 4 )
">Copy Code</button></div><div id="cppCodeBlock18" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::SetParticlesVelocityRange ( 1, 1.0f, 4.0f );
</pre></div><h2>Adding color key frames</h2><p>Particles have the ability to change color over the span of their life. This is useful for effects such as particles transitioning to a weaker color or fading out over time. The way it works is that you can specify a color at a specific time, for example, a particle may start out as white and when it nears the end of its life span turn to red. To handle this use the command <i>AddParticlesColorKeyFrame</i>. This command takes several parameters: ID number of the particles, time at which the key frame is to be used, followed by red, green, blue and alpha values.</p><p>These lines of code set color key frames for our particles. It begins by setting the color to 0, 100, 255, 0 at time 0 (the beginning of a particles life). The next line changes the color by bringing in the alpha to 255 at time 0.5. This has the effect of quickly fading in the particles. This is followed by a change to color 150, 50, 100 at time 8. Finally the particle is faded out when it nears the end of its life at time 9:</p><div id="basicCodeBlock19" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">AddParticlesColorKeyFrame ( 1, 0, 0, 100, 255, 0 )
AddParticlesColorKeyFrame ( 1, 0.5, 0, 100, 255, 255 )
AddParticlesColorKeyFrame ( 1, 8.0, 150, 50, 100, 255 )
AddParticlesColorKeyFrame ( 1, 9.0, 0, 0, 0, 0 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="AddParticlesColorKeyFrame ( 1, 0, 0, 100, 255, 0 )
AddParticlesColorKeyFrame ( 1, 0.5, 0, 100, 255, 255 )
AddParticlesColorKeyFrame ( 1, 8.0, 150, 50, 100, 255 )
AddParticlesColorKeyFrame ( 1, 9.0, 0, 0, 0, 0 )
">Copy Code</button></div><div id="cppCodeBlock20" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::AddParticlesColorKeyFrame ( 1, 0, 0, 100, 255, 0 );
agk::AddParticlesColorKeyFrame ( 1, 0.5, 0, 100, 255, 255 );
agk::AddParticlesColorKeyFrame ( 1, 8.0, 150, 50, 100, 255 );
agk::AddParticlesColorKeyFrame ( 1, 9.0, 0, 0, 0, 0 );
</pre></div><h2>Main Loop</h2><p>Our main loop simply needs to make a call to <i>Sync</i> to update the screen:</p><div id="basicCodeBlock21" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">do
    Sync ( )
loop
</pre></div><div align="right"><button class="btn" data-clipboard-text="do
    Sync ( )
loop
">Copy Code</button></div><div id="cppCodeBlock22" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">void app::Loop ( void )
{
    agk::Sync ( );
}
</pre></div><h2>Full code listing</h2><p>Everything is now in place. Here's the final code for our program:</p><div id="basicCodeBlock23" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">SetVirtualResolution ( 320, 480 )
<br>
backdrop = CreateSprite ( LoadImage ( "background1.jpg" ) )
<br>
LoadImage ( 1, "particle.png" )
<br>
CreateParticles           ( 1, 150, 10 )
SetParticlesImage         ( 1, 1 )
<br>
SetParticlesStartZone     ( 1, -100, -10, 100, 10 )
<br>	
SetParticlesDirection     ( 1, 0, 50.0 )
<br>
SetParticlesLife          ( 1, 9 )
SetParticlesSize          ( 1, 24 )
SetParticlesAngle         ( 1, 15 )
SetParticlesFrequency     ( 1, 60 )
SetParticlesVelocityRange ( 1, 1, 4 )
<br>
AddParticlesColorKeyFrame ( 1, 0, 0, 100, 255, 0 )
AddParticlesColorKeyFrame ( 1, 0.5, 0, 100, 255, 255 )
AddParticlesColorKeyFrame ( 1, 8.0, 150, 50, 100, 255 )
AddParticlesColorKeyFrame ( 1, 9.0, 0, 0, 0, 0 )
<br>
do
    Sync ( )
loop
</pre></div><div align="right"><button class="btn" data-clipboard-text="SetVirtualResolution ( 320, 480 )

backdrop = CreateSprite ( LoadImage ( &quot;background1.jpg&quot; ) )

LoadImage ( 1, &quot;particle.png&quot; )

CreateParticles           ( 1, 150, 10 )
SetParticlesImage         ( 1, 1 )

SetParticlesStartZone     ( 1, -100, -10, 100, 10 )

SetParticlesDirection     ( 1, 0, 50.0 )

SetParticlesLife          ( 1, 9 )
SetParticlesSize          ( 1, 24 )
SetParticlesAngle         ( 1, 15 )
SetParticlesFrequency     ( 1, 60 )
SetParticlesVelocityRange ( 1, 1, 4 )

AddParticlesColorKeyFrame ( 1, 0, 0, 100, 255, 0 )
AddParticlesColorKeyFrame ( 1, 0.5, 0, 100, 255, 255 )
AddParticlesColorKeyFrame ( 1, 8.0, 150, 50, 100, 255 )
AddParticlesColorKeyFrame ( 1, 9.0, 0, 0, 0, 0 )

do
    Sync ( )
loop
">Copy Code</button></div><div id="cppCodeBlock24" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">void app::Begin ( void )
{
agk::SetVirtualResolution ( 320, 480 );
<br>
int backdrop = agk::CreateSprite ( agk::LoadImage ( "background1.jpg" ) );
<br>
agk::LoadImage ( 1, "particle.png" );
<br>
agk::CreateParticles           ( 1, 150, 10 );
agk::SetParticlesImage         ( 1, 1 );
<br>
agk::SetParticlesStartZone     ( 1, -100, -10, 100, 10 );
<br>	
agk::SetParticlesDirection     ( 1, 0, 50.0f );
<br>
agk::SetParticlesLife          ( 1, 9 );
agk::SetParticlesSize          ( 1, 24 );
agk::SetParticlesAngle         ( 1, 15 );
agk::SetParticlesFrequency     ( 1, 60 );
agk::SetParticlesVelocityRange ( 1, 1.0f, 4.0f );
<br>
agk::AddParticlesColorKeyFrame ( 1, 0, 0, 100, 255, 0 );
agk::AddParticlesColorKeyFrame ( 1, 0.5, 0, 100, 255, 255 );
agk::AddParticlesColorKeyFrame ( 1, 8.0, 150, 50, 100, 255 );
agk::AddParticlesColorKeyFrame ( 1, 9.0, 0, 0, 0, 0 );
}
<br>
void app::Loop ( void )
{
    agk::Sync ( );
}
</pre></div><h2>Conclusion</h2><p>When you run the application the particles on screen will continually change colour.</p><p>Getting particles on screen is a fairly simple process. By experimenting with their settings it's possible to create all kinds of interesting effects to enhance your games.</p><br><br></div><div class="footer" style="background: #000 url('../../gfx/footer-back.png') top center no-repeat;"><div><p><a href="https://www.thegamecreators.com" target="_blank" style="float:none"><img style="float:right;margin-top:2px" src="../../gfx/tgc-logo.png" width="188" height="27" alt="" border="0"></a><br><strong>App Game Kit</strong> &nbsp;&copy; The Game Creators Ltd. All Rights Reserved.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="mailto:agkreports@thegamecreators.com" style="float:none"><font color="FFFFFF">Report an issue</font></a></p></p></div></div><script type="text/javascript">prettyPrint(true);</script></body></html>