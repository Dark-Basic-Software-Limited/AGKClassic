<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>Joint motors - AGK Help</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<script type="text/javascript" src="../../main.js"></script>
<link href="../../main.css" rel="styleSheet" type="text/css" />
<link href="../../prettify.css" rel="styleSheet" type="text/css" />
<script type="text/javascript" src="../../prettify.js"></script>
<script type="text/javascript" src="../../lang-agk.js"></script>
<link rel="stylesheet" href="../lightbox/css/lightbox.min.css">
<script src="../lightbox/js/lightbox-plus-jquery.min.js"></script>
<script src="../clipboard/clipboard.min.js"></script>
<script type="text/javascript" src="https://www.appgamekit.com/assets/js/docs-jquery.min.js"></script>
<script type="text/javascript" src="https://www.appgamekit.com/assets/js/docs-translate.js"></script>
</head>
<body>
<script>var clipboard = new Clipboard('.btn');
clipboard.on('success', function(e)
{
console.log(e);
});
clipboard.on('error', function(e)
{
console.log(e);
});
</script>
<div class="header" style="background: #000 url('../../gfx/header-back.png') top center no-repeat;"><div><div class="navigation"><a href="../../home.html"><img src="../../gfx/b-home.png" width="76" height="44" alt=""></a><a href="javascript:history.go(-1)"><img src="../../gfx/b-back.png" width="71" height="44" alt=""></a><a href="javascript:window.print()"><img src="../../gfx/b-print.png" width="75" height="44" alt=""></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../../gfx/lang-c.png" width="253" height="44" alt=""  id="basicCodeBlock0" border="0"></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../../gfx/lang-basic.png" width="253" height="44" alt=""  id="cppCodeBlock0" style="display:none" border="0"></a></div><a href="https://www.appgamekit.com" target="_blank"><img class="logo" src="../../gfx/agk-logo.png" height="44" style="margin:15px 0" alt="App Game Kit" border="0"></a></div><img src="../../gfx/drop-shadow.png" width="1158" height="40" alt=""></div><div class="breadcrumbs">
<a href="../../home.html">Home</a> &gt; <a href="../../examples.html">Examples</a> &gt; Joint motors</div><div class="page"><h1>Joint motors</h1><h2>Description</h2><p>Line, prismatic and revolute joints support motors, which can be used to continuously move a joint until it is prevented by a collision. Motors work by applying a force to achieve a set speed, if they meet resistance they increase the force until either the motor is moving at the desired speed or a maximum force is reached. Motors can be used for all kinds of interesting scenarios. In this example a motor is attached to a revolute joint, that will continually spin a sprite around another sprite.</p><div align="center"><img src="11_joint_motors.jpg"/></div><h2>Getting started</h2><p>The code will perform the following:</p><ul><li>set a virtual resolution of 320 x 480</li><li>load images named silver1.png (a crate) and small_ball.png</li><li>create a static sprite that uses the crate</li><li>create a dynamic sprite that uses the ball, this will be placed below the crate</li><li>create a revolute joint that connects the crate and chip together</li><li>turn a motor on for the joint</li><li>switch physics debug on</li></ul><h2>Setting the virtual resolution and loading images</h2><p>A virtual resolution is set along with two images being loaded:</p><div id="basicCodeBlock1" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">SetVirtualResolution ( 320, 480 )
<br>
LoadImage ( 1, "silver1.png" )
LoadImage ( 2, "small_ball.png" )
</pre></div><div align="right"><button class="btn" data-clipboard-text="SetVirtualResolution ( 320, 480 )

LoadImage ( 1, &quot;silver1.png&quot; )
LoadImage ( 2, &quot;small_ball.png&quot; )
">Copy Code</button></div><div id="cppCodeBlock2" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::SetVirtualResolution ( 320, 480 );
<br>
agk::LoadImage ( 1, "silver1.png" );
agk::LoadImage ( 2, "small_ball.png" );
</pre></div><h2>Creating a static sprite</h2><p>Sprite 1 will be created that uses the crate image. It will get placed at 150, 150 and have physics turned on, with its state being set to static:</p><div id="basicCodeBlock3" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">CreateSprite ( 1, 1 )
SetSpritePosition ( 1, 150, 150 )
SetSpritePhysicsOn ( 1, 1 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="CreateSprite ( 1, 1 )
SetSpritePosition ( 1, 150, 150 )
SetSpritePhysicsOn ( 1, 1 )
">Copy Code</button></div><div id="cppCodeBlock4" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::CreateSprite ( 1, 1 );
agk::SetSpritePosition ( 1, 150, 150 );
agk::SetSpritePhysicsOn ( 1, 1 );
</pre></div><h2>Creating a dynamic sprite</h2><p>Sprite 2 will be created. This sprite will use the chip image and will get placed directly below the crate at a position of 150, 250. Its shape will be set to a circle, as this is a closer match than the default box for collision, and physics will be turned on with its state being set to dynamic:</p><div id="basicCodeBlock5" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">CreateSprite ( 2, 2 )
SetSpritePosition ( 2, 150, 250 )
SetSpriteShape ( 2, 1 )
SetSpritePhysicsOn ( 2, 2 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="CreateSprite ( 2, 2 )
SetSpritePosition ( 2, 150, 250 )
SetSpriteShape ( 2, 1 )
SetSpritePhysicsOn ( 2, 2 )
">Copy Code</button></div><div id="cppCodeBlock6" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::CreateSprite ( 2, 2 );
agk::SetSpritePosition ( 2, 150, 250 );
agk::SetSpriteShape ( 2, 1 );
agk::SetSpritePhysicsOn ( 2, 2 );
</pre></div><h2>Creating a revolute joint</h2><p>A revolute joint is created with an ID of 1, connecting sprite 1 and 2 together with the anchor point being 182, 182 which is roughly the center point of the crate:</p><div id="basicCodeBlock7" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">CreateRevoluteJoint ( 1, 1, 2, 182, 182 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="CreateRevoluteJoint ( 1, 1, 2, 182, 182 )
">Copy Code</button></div><div id="cppCodeBlock8" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::CreateRevoluteJoint ( 1, 1, 2, 182, 182 );
</pre></div><h2>Turning the motor on</h2><p>To turn a motor on for the joint use the command <i>SetJointMotorOn</i>. This command requires the ID number of the joint, a value controlling how fast the motor is and finally a value that determines the maximum amount of force that can be applied. In our case the motor is turned on for joint 1 (the revolute joint) and has a speed of 0.5 and a maximum force of 20,000:</p><div id="basicCodeBlock9" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">SetJointMotorOn ( 1, 0.5, 20000 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="SetJointMotorOn ( 1, 0.5, 20000 )
">Copy Code</button></div><div id="cppCodeBlock10" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::SetJointMotorOn ( 1, 0.5, 20000 );
</pre></div><p>When the program runs, the motor will force the chip to revolve around the crate at a relatively low speed. Changing the speed value from 0.5 to a higher value, such as 10, would result in the chip revolving around the crate at a much greater speed.</p><p>Notice how the maximum force is at a reasonably high value. Try lowering this to 10,000 and notice the impact it has - with a lower maximum force the motor doesn't have enough power to push the chip around the crate.</p><p>If you need to switch the motor off call the command <i>SetJointMotorOff</i> and pass in the ID number of the joint.</p><h2>Full code listing</h2><p>Everything is now in place. The only extras needed are to enable physics debugging and to ensure <i>Sync</i> is called within the main loop. Here's the final code for our program:</p><div id="basicCodeBlock11" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">SetVirtualResolution ( 320, 480 )
<br>
LoadImage ( 1, "silver1.png" )
LoadImage ( 2, "small_ball.png" )
<br>
CreateSprite ( 1, 1 )
SetSpritePosition ( 1, 150, 150 )
SetSpritePhysicsOn ( 1, 1 )
<br>
CreateSprite ( 2, 2 )
SetSpritePosition ( 2, 150, 250 )
SetSpriteShape ( 2, 1 )
SetSpritePhysicsOn ( 2, 2 )
<br>
CreateRevoluteJoint ( 1, 1, 2, 182, 182 )
<br>
SetJointMotorOn ( 1, 0.5, 20000 )
<br>
SetPhysicsDebugOn ( )
<br>
do
    Sync ( )
loop
</pre></div><div align="right"><button class="btn" data-clipboard-text="SetVirtualResolution ( 320, 480 )

LoadImage ( 1, &quot;silver1.png&quot; )
LoadImage ( 2, &quot;small_ball.png&quot; )

CreateSprite ( 1, 1 )
SetSpritePosition ( 1, 150, 150 )
SetSpritePhysicsOn ( 1, 1 )

CreateSprite ( 2, 2 )
SetSpritePosition ( 2, 150, 250 )
SetSpriteShape ( 2, 1 )
SetSpritePhysicsOn ( 2, 2 )

CreateRevoluteJoint ( 1, 1, 2, 182, 182 )

SetJointMotorOn ( 1, 0.5, 20000 )

SetPhysicsDebugOn ( )

do
    Sync ( )
loop
">Copy Code</button></div><div id="cppCodeBlock12" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">void app::Begin ( void )
{
    agk::SetVirtualResolution ( 320, 480 );
<br>
    agk::LoadImage ( 1, "silver1.png" );
    agk::LoadImage ( 2, "small_ball.png" );
<br>
    agk::CreateSprite ( 1, 1 );
    agk::SetSpritePosition ( 1, 150, 150 );
    agk::SetSpritePhysicsOn ( 1, 1 );
<br>
    agk::CreateSprite ( 2, 2 );
    agk::SetSpritePosition ( 2, 150, 250 );
    agk::SetSpriteShape ( 2, 1 );
    agk::SetSpritePhysicsOn ( 2, 2 );
<br>
    agk::CreateRevoluteJoint ( 1, 1, 2, 182, 182 );
<br>
    agk::SetJointMotorOn ( 1, 0.5, 20000 );
<br>
    agk::SetPhysicsDebugOn ( );
}
<br>
void app::Loop ( void )
{
    agk::Sync ( );
}
</pre></div><h2>Conclusion</h2><p>Whilst this is a simple example, it should give you an insight into what might be possible when using motors with joints. There is potential for all kinds of interesting effects that could really liven up your game.</p><br><br></div><div class="footer" style="background: #000 url('../../gfx/footer-back.png') top center no-repeat;"><div><p><a href="https://www.thegamecreators.com" target="_blank" style="float:none"><img style="float:right;margin-top:2px" src="../../gfx/tgc-logo.png" width="188" height="27" alt="" border="0"></a><br><strong>App Game Kit</strong> &nbsp;&copy; The Game Creators Ltd. All Rights Reserved.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="mailto:agkreports@thegamecreators.com" style="float:none"><font color="FFFFFF">Report an issue</font></a></p></p></div></div><script type="text/javascript">prettyPrint(true);</script></body></html>