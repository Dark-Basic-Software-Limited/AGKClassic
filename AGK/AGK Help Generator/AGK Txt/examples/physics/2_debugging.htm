<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>Debugging Physics - AGK Help</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<script type="text/javascript" src="../../main.js"></script>
<link href="../../main.css" rel="styleSheet" type="text/css" />
<link href="../../prettify.css" rel="styleSheet" type="text/css" />
<script type="text/javascript" src="../../prettify.js"></script>
<script type="text/javascript" src="../../lang-agk.js"></script>
<link rel="stylesheet" href="../lightbox/css/lightbox.min.css">
<script src="../lightbox/js/lightbox-plus-jquery.min.js"></script>
<script src="../clipboard/clipboard.min.js"></script>
<script type="text/javascript" src="https://www.appgamekit.com/assets/js/docs-jquery.min.js"></script>
<script type="text/javascript" src="https://www.appgamekit.com/assets/js/docs-translate.js"></script>
</head>
<body>
<script>var clipboard = new Clipboard('.btn');
clipboard.on('success', function(e)
{
console.log(e);
});
clipboard.on('error', function(e)
{
console.log(e);
});
</script>
<div class="header" style="background: #000 url('../../gfx/header-back.png') top center no-repeat;"><div><div class="navigation"><a href="../../home.html"><img src="../../gfx/b-home.png" width="76" height="44" alt=""></a><a href="javascript:history.go(-1)"><img src="../../gfx/b-back.png" width="71" height="44" alt=""></a><a href="javascript:window.print()"><img src="../../gfx/b-print.png" width="75" height="44" alt=""></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../../gfx/lang-c.png" width="253" height="44" alt=""  id="basicCodeBlock0" border="0"></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../../gfx/lang-basic.png" width="253" height="44" alt=""  id="cppCodeBlock0" style="display:none" border="0"></a></div><a href="https://www.appgamekit.com" target="_blank"><img class="logo" src="../../gfx/agk-logo.png" height="44" style="margin:15px 0" alt="App Game Kit" border="0"></a></div><img src="../../gfx/drop-shadow.png" width="1158" height="40" alt=""></div><div class="breadcrumbs">
<a href="../../home.html">Home</a> &gt; <a href="../../examples.html">Examples</a> &gt; Debugging Physics</div><div class="page"><h1>Debugging Physics</h1><h2>Description</h2><p>Internally AGK represents physics objects by providing a bounding box, a circle or a convex hull around sprites. By switching the physics debug mode on you can get to see how AGK is representing your sprites in the physics simulation. Switching this mode on will force AGK to draw the physics representations of your sprites on top of all sprites. This is great for debugging. Being able to see this on screen can help make a big difference to understanding how and why the physics simulation provides results.</p><p>This example creates four dynamic sprites that are placed alongside each other. A fifth sprite is created, that is positioned slightly below the other sprites and is static. Finally debug mode is switched on for physics.</p><div align="center"><img src="2_debugging.jpg"/></div><h2>Overview</h2><p>The steps involved in this example are:</p><ul><li>create our sprites and set their dynamic or static states</li><li>turn physics on for the sprites</li><li>turn physics debug on</li><li>within the main loop simply update the contents of the screen</li></ul><h2>Creating the sprites</h2><p>One image is loaded, which is then used by five sprites, which are laid out in a row, except for sprite three that is slightly lower down the screen:</p><div id="basicCodeBlock1" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">LoadImage ( 1, "small_silver.png" )
<br>
CreateSprite ( 1, 1 )
CreateSprite ( 2, 1 )
CreateSprite ( 3, 1 )
CreateSprite ( 4, 1 )
CreateSprite ( 5, 1 )
<br>
SetSpritePosition ( 1,  50,   0 )
SetSpritePosition ( 2, 100,   0 )
SetSpritePosition ( 3, 140, 200 )
SetSpritePosition ( 4, 170,   0 )
SetSpritePosition ( 5, 220,   0 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="LoadImage ( 1, &quot;small_silver.png&quot; )

CreateSprite ( 1, 1 )
CreateSprite ( 2, 1 )
CreateSprite ( 3, 1 )
CreateSprite ( 4, 1 )
CreateSprite ( 5, 1 )

SetSpritePosition ( 1,  50,   0 )
SetSpritePosition ( 2, 100,   0 )
SetSpritePosition ( 3, 140, 200 )
SetSpritePosition ( 4, 170,   0 )
SetSpritePosition ( 5, 220,   0 )
">Copy Code</button></div><div id="cppCodeBlock2" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::LoadImage ( 1, "small_silver.png" );
<br>
agk::CreateSprite ( 1, 1 );
agk::CreateSprite ( 2, 1 );
agk::CreateSprite ( 3, 1 );
agk::CreateSprite ( 4, 1 );
agk::CreateSprite ( 5, 1 );
<br>
agk::SetSpritePosition ( 1,  50,   0 );
agk::SetSpritePosition ( 2, 100,   0 );
agk::SetSpritePosition ( 3, 140, 200 );
agk::SetSpritePosition ( 4, 170,   0 );
agk::SetSpritePosition ( 5, 220,   0 );
</pre></div><h2>Switching physics on</h2><p>Four of the sprites are enabled as dynamic objects, while one is set up as a static object.</p><div id="basicCodeBlock3" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">SetSpritePhysicsOn ( 1, 2 )
SetSpritePhysicsOn ( 2, 2 )
SetSpritePhysicsOn ( 3, 1 )
SetSpritePhysicsOn ( 4, 2 )
SetSpritePhysicsOn ( 5, 2 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="SetSpritePhysicsOn ( 1, 2 )
SetSpritePhysicsOn ( 2, 2 )
SetSpritePhysicsOn ( 3, 1 )
SetSpritePhysicsOn ( 4, 2 )
SetSpritePhysicsOn ( 5, 2 )
">Copy Code</button></div><div id="cppCodeBlock4" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::SetSpritePhysicsOn ( 1, 2 );
agk::SetSpritePhysicsOn ( 2, 2 );
agk::SetSpritePhysicsOn ( 3, 1 );
agk::SetSpritePhysicsOn ( 4, 2 );
agk::SetSpritePhysicsOn ( 5, 2 );
</pre></div><h2>Debug mode</h2><p>To switch debug mode on for physics itâ€™s simply a case of calling the command <i>SetPhysicsDebugOn</i>. This function takes no parameters. To switch it off call <i>SetPhysicsDebugOff</i>. Please note that switching debug mode on is likely to negatively impact the frame rate of your game. Once switched on the overlaid shapes will be drawn with the following colours, in order to help you identify the kind of object they are:</p><ul><li>cream - used for dynamic objects</li><li>green - used for static objects</li><li>blue - used for kinematic objects</li><li>grey - displays sleeping dynamic objects</li></ul><p>Prior to our main loop the function <i>SetPhysicsDebugOn</i> is called:</p><div id="basicCodeBlock5" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">SetPhysicsDebugOn ( )
</pre></div><div align="right"><button class="btn" data-clipboard-text="SetPhysicsDebugOn ( )
">Copy Code</button></div><div id="cppCodeBlock6" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::SetPhysicsDebugOn ( );
</pre></div><h2>Main loop</h2><p>The main loop in this example does not take any action. All it needs to do is make a call to <i>Sync</i> to ensure the screen is updated.</p><div id="basicCodeBlock7" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">do
    Sync ( )
loop
</pre></div><div align="right"><button class="btn" data-clipboard-text="do
    Sync ( )
loop
">Copy Code</button></div><div id="cppCodeBlock8" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">void app::Loop ( void )
{
    agk::Sync ( );
}
</pre></div><h2>Full code listing</h2><p>The only alteration for the final program is the addition of a background image, which has its alpha level reduced to 100. Here's the final listing:</p><div id="basicCodeBlock9" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">SetVirtualResolution ( 320, 480 )
<br>
backdrop = CreateSprite ( LoadImage ( "background2.jpg" ) )
SetSpriteColorAlpha ( backdrop, 100 )
<br>
LoadImage ( 1, "small_silver.png" )
<br>
CreateSprite ( 1, 1 )
CreateSprite ( 2, 1 )
CreateSprite ( 3, 1 )
CreateSprite ( 4, 1 )
CreateSprite ( 5, 1 )
<br>
SetSpritePosition ( 1,  50,   0 )
SetSpritePosition ( 2, 100,   0 )
SetSpritePosition ( 3, 140, 200 )
SetSpritePosition ( 4, 170,   0 )
SetSpritePosition ( 5, 220,   0 )
<br>
SetSpritePhysicsOn ( 1, 2 )
SetSpritePhysicsOn ( 2, 2 )
SetSpritePhysicsOn ( 3, 1 )
SetSpritePhysicsOn ( 4, 2 )
SetSpritePhysicsOn ( 5, 2 )
<br>
SetPhysicsDebugOn ( )
<br>
do
    Sync ( )
loop
</pre></div><div align="right"><button class="btn" data-clipboard-text="SetVirtualResolution ( 320, 480 )

backdrop = CreateSprite ( LoadImage ( &quot;background2.jpg&quot; ) )
SetSpriteColorAlpha ( backdrop, 100 )

LoadImage ( 1, &quot;small_silver.png&quot; )

CreateSprite ( 1, 1 )
CreateSprite ( 2, 1 )
CreateSprite ( 3, 1 )
CreateSprite ( 4, 1 )
CreateSprite ( 5, 1 )

SetSpritePosition ( 1,  50,   0 )
SetSpritePosition ( 2, 100,   0 )
SetSpritePosition ( 3, 140, 200 )
SetSpritePosition ( 4, 170,   0 )
SetSpritePosition ( 5, 220,   0 )

SetSpritePhysicsOn ( 1, 2 )
SetSpritePhysicsOn ( 2, 2 )
SetSpritePhysicsOn ( 3, 1 )
SetSpritePhysicsOn ( 4, 2 )
SetSpritePhysicsOn ( 5, 2 )

SetPhysicsDebugOn ( )

do
    Sync ( )
loop
">Copy Code</button></div><div id="cppCodeBlock10" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">void app::Begin ( void )
{
    agk::SetVirtualResolution ( 320, 480 );
<br>
    int backdrop = agk::CreateSprite ( agk::LoadImage ( "background2.jpg" ) );
    agk::SetSpriteColorAlpha ( backdrop, 100 );
<br>
    agk::LoadImage ( 1, "small_silver.png" );
<br>
    agk::CreateSprite ( 1, 1 );
    agk::CreateSprite ( 2, 1 );
    agk::CreateSprite ( 3, 1 );
    agk::CreateSprite ( 4, 1 );
    agk::CreateSprite ( 5, 1 );
<br>
    agk::SetSpritePosition ( 1,  50,   0 );
    agk::SetSpritePosition ( 2, 100,   0 );
    agk::SetSpritePosition ( 3, 140, 200 );
    agk::SetSpritePosition ( 4, 170,   0 );
    agk::SetSpritePosition ( 5, 220,   0 );
<br>
    agk::SetSpritePhysicsOn ( 1, 2 );
    agk::SetSpritePhysicsOn ( 2, 2 );
    agk::SetSpritePhysicsOn ( 3, 1 );
    agk::SetSpritePhysicsOn ( 4, 2 );
    agk::SetSpritePhysicsOn ( 5, 2 );
<br>
    agk::SetPhysicsDebugOn ( ); 
}
<br>
void app::Loop ( void )
{
    agk::Sync ( );
}
</pre></div><h2>Conclusion</h2><p>This simple command is a great way of understanding how your sprites are represented in the physics simulation. It can be used to determine such things as whether a bounding box isnâ€™t providing a tight fit around a sprite, and whether itâ€™s better to use an alternative.</p><br><br></div><div class="footer" style="background: #000 url('../../gfx/footer-back.png') top center no-repeat;"><div><p><a href="https://www.thegamecreators.com" target="_blank" style="float:none"><img style="float:right;margin-top:2px" src="../../gfx/tgc-logo.png" width="188" height="27" alt="" border="0"></a><br><strong>App Game Kit</strong> &nbsp;&copy; The Game Creators Ltd. All Rights Reserved.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="mailto:agkreports@thegamecreators.com" style="float:none"><font color="FFFFFF">Report an issue</font></a></p></p></div></div><script type="text/javascript">prettyPrint(true);</script></body></html>