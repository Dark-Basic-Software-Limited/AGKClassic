<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>Reading from a file - AGK Help</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<script type="text/javascript" src="../../main.js"></script>
<link href="../../main.css" rel="styleSheet" type="text/css" />
<link href="../../prettify.css" rel="styleSheet" type="text/css" />
<script type="text/javascript" src="../../prettify.js"></script>
<script type="text/javascript" src="../../lang-agk.js"></script>
<link rel="stylesheet" href="../lightbox/css/lightbox.min.css">
<script src="../lightbox/js/lightbox-plus-jquery.min.js"></script>
<script src="../clipboard/clipboard.min.js"></script>
<script type="text/javascript" src="https://www.appgamekit.com/assets/js/docs-jquery.min.js"></script>
<script type="text/javascript" src="https://www.appgamekit.com/assets/js/docs-translate.js"></script>
</head>
<body>
<script>var clipboard = new Clipboard('.btn');
clipboard.on('success', function(e)
{
console.log(e);
});
clipboard.on('error', function(e)
{
console.log(e);
});
</script>
<div class="header" style="background: #000 url('../../gfx/header-back.png') top center no-repeat;"><div><div class="navigation"><a href="../../home.html"><img src="../../gfx/b-home.png" width="76" height="44" alt=""></a><a href="javascript:history.go(-1)"><img src="../../gfx/b-back.png" width="71" height="44" alt=""></a><a href="javascript:window.print()"><img src="../../gfx/b-print.png" width="75" height="44" alt=""></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../../gfx/lang-c.png" width="253" height="44" alt=""  id="basicCodeBlock0" border="0"></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../../gfx/lang-basic.png" width="253" height="44" alt=""  id="cppCodeBlock0" style="display:none" border="0"></a></div><a href="https://www.appgamekit.com" target="_blank"><img class="logo" src="../../gfx/agk-logo.png" height="44" style="margin:15px 0" alt="App Game Kit" border="0"></a></div><img src="../../gfx/drop-shadow.png" width="1158" height="40" alt=""></div><div class="breadcrumbs">
<a href="../../home.html">Home</a> &gt; <a href="../../examples.html">Examples</a> &gt; Reading from a file</div><div class="page"><h1>Reading from a file</h1><h2>Description</h2><p>Games often need to store data on a file, for example, high scores or level progress. The file access commands in AGK provide the ability to deal with tasks such as this. In this particular example commands are used that show the opening and reading of data from a file.</p><h2>Overview</h2><p>The process involved is as follows:</p><ul><li>open a file for reading</li><li>read data such as an integer, float and string</li><li>close the file</li></ul><h2>Open a file for reading</h2><p>The command to open a file for writing is called <i>OpenToWrite</i>. It either takes one or two parameters dependant on usage. The first option is to have the command return an ID number for later usage, when taking this option the command only requires one parameter - the filename. If you want to specify an ID number then the command takes two parameters - the ID and the filename.</p><p>This line of code shows the first option:</p><div id="basicCodeBlock1" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">fileID = OpenToRead ( "myfile.txt" )
</pre></div><div align="right"><button class="btn" data-clipboard-text="fileID = OpenToRead ( &quot;myfile.txt&quot; )
">Copy Code</button></div><div id="cppCodeBlock2" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">fileID = agk::OpenToRead ( "myfile.txt" );
</pre></div><p>An ID for the file is returned to the variable <i>fileID</i>, the first parameter "myFile.txt" tells AGK that we want to open this particular file.</p><p>The alternative approach is to specify an ID number manually, instead of it being assigned in the return value:</p><div id="basicCodeBlock3" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">OpenToRead ( 1, "myfile.txt" )
</pre></div><div align="right"><button class="btn" data-clipboard-text="OpenToRead ( 1, &quot;myfile.txt&quot; )
">Copy Code</button></div><div id="cppCodeBlock4" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::OpenToRead ( 1, "myfile.txt" );
</pre></div><p>For the purpose of our example an ID number will be specified manually.</p><h2>Reading data from a file</h2><p>There are three possible data types that can be read from a file:</p><ul><li>integers</li><li>strings</li><li>floats</li></ul><h2>Test file</h2><p>Our test file will contain the following data:</p><ul><li>10</li><li>1.23</li><li>hello</li></ul><h2>Read an integer from a file</h2><p>To read an integer from file call the <i>ReadInteger</i> command. This command takes one parameter - the ID of the file. This line of code reads an integer from the file, in this case 10:</p><div id="basicCodeBlock5" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">value = ReadInteger ( 1 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="value = ReadInteger ( 1 )
">Copy Code</button></div><div id="cppCodeBlock6" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">value = agk::ReadInteger ( 1 );
</pre></div><h2>Reading a string from file</h2><p>To read a string from a file call the <i>ReadString</i> command. This command takes one parameter - the ID of the file. This line of code read the string "hello" from file 1:</p><div id="basicCodeBlock7" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">string$ = ReadString ( 1 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="string$ = ReadString ( 1 )
">Copy Code</button></div><div id="cppCodeBlock8" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">string = agk::ReadString ( 1 );
</pre></div><h2>Reading a float from file</h2><p>To read a float from a file call the <i>ReadFloat</i> command. This command takes one parameter - the ID of the file. This line of code reads the value 1.23 from file 1:</p><div id="basicCodeBlock9" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">value# = ReadFloat ( 1 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="value# = ReadFloat ( 1 )
">Copy Code</button></div><div id="cppCodeBlock10" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">value = agk::ReadFloat ( 1 );
</pre></div><h2>Closing a file</h2><p>Once all data has been read from a file that file must be closed using the command <i>CloseFile</i>. This commands only parameter is the ID of the file. To close file 1:</p><div id="basicCodeBlock11" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">CloseFile ( 1 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="CloseFile ( 1 )
">Copy Code</button></div><div id="cppCodeBlock12" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::CloseFile ( 1 );
</pre></div><h2>Full code listing</h2><p>Our final program will read from a file containing this data:</p><ul><li>10</li><li>1.23</li><li>hello</li></ul><p>Here's the code:</p><div id="basicCodeBlock13" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">OpenToRead ( 1, "myfile.txt" )
<br>
a = ReadInteger ( 1 )
b# = ReadFloat ( 1 )
c$ = ReadString ( 1 )
<br>
CloseFile ( 1 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="OpenToRead ( 1, &quot;myfile.txt&quot; )

a = ReadInteger ( 1 )
b# = ReadFloat ( 1 )
c$ = ReadString ( 1 )

CloseFile ( 1 )
">Copy Code</button></div><div id="cppCodeBlock14" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::OpenToRead ( 1, "myfile.txt" );
<br>
a = agk::ReadInteger ( 1 );
b = agk::ReadFloat ( 1 );
c = agk::ReadString ( 1 );
<br>
agk::CloseFile ( 1 );
</pre></div><h2>Conclusion</h2><p>As you can see from the above code, opening a file and reading data from it is a simple process. The important point to note is that you must read data in the correct order. Our file had an integer, a float and then a string, so we had to read it in that order.</p><br><br></div><div class="footer" style="background: #000 url('../../gfx/footer-back.png') top center no-repeat;"><div><p><a href="https://www.thegamecreators.com" target="_blank" style="float:none"><img style="float:right;margin-top:2px" src="../../gfx/tgc-logo.png" width="188" height="27" alt="" border="0"></a><br><strong>App Game Kit</strong> &nbsp;&copy; The Game Creators Ltd. All Rights Reserved.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="mailto:agkreports@thegamecreators.com" style="float:none"><font color="FFFFFF">Report an issue</font></a></p></p></div></div><script type="text/javascript">prettyPrint(true);</script></body></html>