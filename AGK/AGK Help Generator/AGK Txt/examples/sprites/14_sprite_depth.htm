<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>Sprite depth - AGK Help</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<script type="text/javascript" src="../../main.js"></script>
<link href="../../main.css" rel="styleSheet" type="text/css" />
<link href="../../prettify.css" rel="styleSheet" type="text/css" />
<script type="text/javascript" src="../../prettify.js"></script>
<script type="text/javascript" src="../../lang-agk.js"></script>
<link rel="stylesheet" href="../lightbox/css/lightbox.min.css">
<script src="../lightbox/js/lightbox-plus-jquery.min.js"></script>
<script src="../clipboard/clipboard.min.js"></script>
<script type="text/javascript" src="https://www.appgamekit.com/assets/js/docs-jquery.min.js"></script>
<script type="text/javascript" src="https://www.appgamekit.com/assets/js/docs-translate.js"></script>
</head>
<body>
<script>var clipboard = new Clipboard('.btn');
clipboard.on('success', function(e)
{
console.log(e);
});
clipboard.on('error', function(e)
{
console.log(e);
});
</script>
<div class="header" style="background: #000 url('../../gfx/header-back.png') top center no-repeat;"><div><div class="navigation"><a href="../../home.html"><img src="../../gfx/b-home.png" width="76" height="44" alt=""></a><a href="javascript:history.go(-1)"><img src="../../gfx/b-back.png" width="71" height="44" alt=""></a><a href="javascript:window.print()"><img src="../../gfx/b-print.png" width="75" height="44" alt=""></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../../gfx/lang-c.png" width="253" height="44" alt=""  id="basicCodeBlock0" border="0"></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../../gfx/lang-basic.png" width="253" height="44" alt=""  id="cppCodeBlock0" style="display:none" border="0"></a></div><a href="https://www.appgamekit.com" target="_blank"><img class="logo" src="../../gfx/agk-logo.png" height="44" style="margin:15px 0" alt="App Game Kit" border="0"></a></div><img src="../../gfx/drop-shadow.png" width="1158" height="40" alt=""></div><div class="breadcrumbs">
<a href="../../home.html">Home</a> &gt; <a href="../../examples.html">Examples</a> &gt; Sprite depth</div><div class="page"><h1>Sprite depth</h1><h2>Description</h2><p>The order in which sprites are drawn is controlled either by the order in which they are created or by altering their depth property. Understanding how this works is important for games that rely on multiple layers of sprites being displayed.</p><p>This example takes a penguin sprite:</p><div align="center"><img src="penguin.png"/></div><p><br>And a football sprite:</p><div align="center"><img src="ball1.png"/></div><p><br>And demonstrates the impact of load order and controlling sprite depth using the in-built commands.</p><h2>Load order</h2><p>This block of code creates a sprite using the penguin image and then creates a sprite using the football image:</p><div id="basicCodeBlock1" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">LoadImage ( 1, "penguin.png" )
CreateSprite ( 1, 1 )
SetSpritePosition ( 1, 100, 300 )
<br>
LoadImage ( 2, "ball1.png" )
CreateSprite ( 2, 2 )
SetSpritePosition ( 2, 125, 300 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="LoadImage ( 1, &quot;penguin.png&quot; )
CreateSprite ( 1, 1 )
SetSpritePosition ( 1, 100, 300 )

LoadImage ( 2, &quot;ball1.png&quot; )
CreateSprite ( 2, 2 )
SetSpritePosition ( 2, 125, 300 )
">Copy Code</button></div><div id="cppCodeBlock2" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::LoadImage ( 1, "penguin.png" );
agk::CreateSprite ( 1, 1 );
agk::SetSpritePosition ( 1, 100, 300 );
<br>
agk::LoadImage ( 2, "ball1.png" );
agk::CreateSprite ( 2, 2 );
agk::SetSpritePosition ( 2, 125, 300 );
</pre></div><p>At this point the penguin sprite will be drawn first, followed by the football sprite:</p><div align="center"><img src="14_sprite_depth1.jpg"/></div><p>The code is now adjusted so that the football sprite is created first and the penguin sprite second:</p><div id="basicCodeBlock3" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">LoadImage ( 2, "ball1.png" )
CreateSprite ( 2, 2 )
SetSpritePosition ( 2, 125, 300 )
<br>
LoadImage ( 1, "penguin.png" )
CreateSprite ( 1, 1 )
SetSpritePosition ( 1, 100, 300 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="LoadImage ( 2, &quot;ball1.png&quot; )
CreateSprite ( 2, 2 )
SetSpritePosition ( 2, 125, 300 )

LoadImage ( 1, &quot;penguin.png&quot; )
CreateSprite ( 1, 1 )
SetSpritePosition ( 1, 100, 300 )
">Copy Code</button></div><div id="cppCodeBlock4" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::LoadImage ( 2, "ball1.png" );
agk::CreateSprite ( 2, 2 );
agk::SetSpritePosition ( 2, 125, 300 );
<br>
agk::LoadImage ( 1, "penguin.png" );
agk::CreateSprite ( 1, 1 );
agk::SetSpritePosition ( 1, 100, 300 );
</pre></div><p>This will result in the football being drawn first and then the penguin:</p><div align="center"><img src="14_sprite_depth2.jpg"/></div><h2>Controlling the draw order</h2><p>Altering the order in which sprites are created isn't always going to be the best approach for controlling draw order. There may be situations where you want to have some sprites drawn at the front or nearer the back and be able to handle this whilst the game is running. To do this use the command <i>SetSpriteDepth</i>. This command takes two parameters - the ID of the sprite and a value controlling the depth, which is by default a value of 10. Lowering this value will force a sprite to be drawn nearer to the front of the screen and increasing this value will send the sprite to the back of the screen.</p><p>The first example code showed the penguin being loaded first, followed by the football, resulting in the penguin drawing first and the football being drawn last. To swap the order of drawing, without adjusting the load order, the <i>SetSpriteDepth</i> command can be used:</p><div id="basicCodeBlock5" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">LoadImage ( 1, "penguin.png" )
CreateSprite ( 1, 1 )
SetSpritePosition ( 1, 100, 300 )
<br>
LoadImage ( 2, "ball1.png" )
CreateSprite ( 2, 2 )
SetSpritePosition ( 2, 125, 300 )
<br>
SetSpriteDepth ( 1, 0 )
SetSpriteDepth ( 2, 1 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="LoadImage ( 1, &quot;penguin.png&quot; )
CreateSprite ( 1, 1 )
SetSpritePosition ( 1, 100, 300 )

LoadImage ( 2, &quot;ball1.png&quot; )
CreateSprite ( 2, 2 )
SetSpritePosition ( 2, 125, 300 )

SetSpriteDepth ( 1, 0 )
SetSpriteDepth ( 2, 1 )
">Copy Code</button></div><div id="cppCodeBlock6" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::LoadImage ( 1, "penguin.png" );
agk::CreateSprite ( 1, 1 );
agk::SetSpritePosition ( 1, 100, 300 );
<br>
agk::LoadImage ( 2, "ball1.png" );
agk::CreateSprite ( 2, 2 );
agk::SetSpritePosition ( 2, 125, 300 );
<br>
agk::SetSpriteDepth ( 1, 0 );
agk::SetSpriteDepth ( 2, 1 );
</pre></div><p>The penguin has its depth set to 0, meaning it will be drawn last, and the football has its depth set to 1, resulting in it being drawn first:</p><div align="center"><img src="14_sprite_depth2.jpg"/></div><h2>Finding the depth of a sprite</h2><p>To retrieve the depth of a sprite call the command <i>GetSpriteDepth</i>, for example, this code will find the depth of sprite 1 and 2:</p><div id="basicCodeBlock7" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">depth1 = GetSpriteDepth ( 1 )
depth2 = GetSpriteDepth ( 2 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="depth1 = GetSpriteDepth ( 1 )
depth2 = GetSpriteDepth ( 2 )
">Copy Code</button></div><div id="cppCodeBlock8" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">depth1 = agk::GetSpriteDepth ( 1 );
depth2 = agk::GetSpriteDepth ( 2 );
</pre></div><h2>Full code listing</h2><p>The final program has the penguin created first, followed by the football. Within the main loop, whenever the user clicks or touches the screen the draw order is swapped around. Here's the final code for our program:</p><div id="basicCodeBlock9" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">SetVirtualResolution ( 320, 480 )
<br>
CreateSprite ( LoadImage ( "background3.jpg" ) )
<br>
LoadImage ( 1, "penguin.png" )
CreateSprite ( 1, 1 )
SetSpritePosition ( 1, 100, 300 )
<br>
LoadImage ( 2, "ball1.png" )
CreateSprite ( 2, 2 )
SetSpritePosition ( 2, 125, 300 )
<br>
do
    Print ( "Click or touch the screen to change" )
    Print ( "the order in which sprites are drawn" )
<br>
    if ( GetPointerPressed ( ) = 1 )
	if ( state = 0 )
	    SetSpriteDepth ( 1, 0 )
	    SetSpriteDepth ( 2, 1 )
	    state = 1
	else
	    SetSpriteDepth ( 1, 1 )
	    SetSpriteDepth ( 2, 0 )
            state = 0
	endif
    endif
<br>
    Sync ( )
loop
</pre></div><div align="right"><button class="btn" data-clipboard-text="SetVirtualResolution ( 320, 480 )

CreateSprite ( LoadImage ( &quot;background3.jpg&quot; ) )

LoadImage ( 1, &quot;penguin.png&quot; )
CreateSprite ( 1, 1 )
SetSpritePosition ( 1, 100, 300 )

LoadImage ( 2, &quot;ball1.png&quot; )
CreateSprite ( 2, 2 )
SetSpritePosition ( 2, 125, 300 )

do
    Print ( &quot;Click or touch the screen to change&quot; )
    Print ( &quot;the order in which sprites are drawn&quot; )

    if ( GetPointerPressed ( ) = 1 )
	if ( state = 0 )
	    SetSpriteDepth ( 1, 0 )
	    SetSpriteDepth ( 2, 1 )
	    state = 1
	else
	    SetSpriteDepth ( 1, 1 )
	    SetSpriteDepth ( 2, 0 )
            state = 0
	endif
    endif

    Sync ( )
loop
">Copy Code</button></div><div id="cppCodeBlock10" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">void app::Begin ( void )
{
    agk::SetVirtualResolution ( 320, 480 );
<br>
    agk::CreateSprite ( agk::LoadImage ( "background3.jpg" ) );
<br>
    agk::LoadImage ( 1, "penguin.png" );
    agk::CreateSprite ( 1, 1 );
    agk::SetSpritePosition ( 1, 100, 300 );
<br>
    agk::LoadImage ( 2, "ball1.png" );
    agk::CreateSprite ( 2, 2 );
    agk::SetSpritePosition ( 2, 125, 300 );
}
<br>
void app::Loop ( void )
{
    agk::Print ( "Click or touch the screen to change" );
    agk::Print ( "the order in which sprites are drawn" );
<br>
    if ( agk::GetPointerPressed ( ) == 1 )
    {
        if ( state == 0 )
	{
	    agk::SetSpriteDepth ( 1, 0 );
	    agk::SetSpriteDepth ( 2, 1 );
	    state = 1;
	}
	else
	{
	    agk::SetSpriteDepth ( 1, 1 );
	    agk::SetSpriteDepth ( 2, 0 );
	    state = 0;
	}
    }
<br>
    agk::Sync ( );
}
</pre></div><h2>Conclusion</h2><p>Being able to control the order in which sprites are drawn is an important task and as seen in this example, AGK provides the ability to control this whether it be through the load order of sprites or the <i>SetSpriteDepth</i> command.</p><br><br></div><div class="footer" style="background: #000 url('../../gfx/footer-back.png') top center no-repeat;"><div><p><a href="https://www.thegamecreators.com" target="_blank" style="float:none"><img style="float:right;margin-top:2px" src="../../gfx/tgc-logo.png" width="188" height="27" alt="" border="0"></a><br><strong>App Game Kit</strong> &nbsp;&copy; The Game Creators Ltd. All Rights Reserved.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="mailto:agkreports@thegamecreators.com" style="float:none"><font color="FFFFFF">Report an issue</font></a></p></p></div></div><script type="text/javascript">prettyPrint(true);</script></body></html>