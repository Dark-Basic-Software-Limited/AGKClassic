<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>Animating sprites - part 2 - AGK Help</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<script type="text/javascript" src="../../main.js"></script>
<link href="../../main.css" rel="styleSheet" type="text/css" />
<link href="../../prettify.css" rel="styleSheet" type="text/css" />
<script type="text/javascript" src="../../prettify.js"></script>
<script type="text/javascript" src="../../lang-agk.js"></script>
<link rel="stylesheet" href="../lightbox/css/lightbox.min.css">
<script src="../lightbox/js/lightbox-plus-jquery.min.js"></script>
<script src="../clipboard/clipboard.min.js"></script>
<script type="text/javascript" src="https://www.appgamekit.com/assets/js/docs-jquery.min.js"></script>
<script type="text/javascript" src="https://www.appgamekit.com/assets/js/docs-translate.js"></script>
</head>
<body>
<script>var clipboard = new Clipboard('.btn');
clipboard.on('success', function(e)
{
console.log(e);
});
clipboard.on('error', function(e)
{
console.log(e);
});
</script>
<div class="header" style="background: #000 url('../../gfx/header-back.png') top center no-repeat;"><div><div class="navigation"><a href="../../home.html"><img src="../../gfx/b-home.png" width="76" height="44" alt=""></a><a href="javascript:history.go(-1)"><img src="../../gfx/b-back.png" width="71" height="44" alt=""></a><a href="javascript:window.print()"><img src="../../gfx/b-print.png" width="75" height="44" alt=""></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../../gfx/lang-c.png" width="253" height="44" alt=""  id="basicCodeBlock0" border="0"></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../../gfx/lang-basic.png" width="253" height="44" alt=""  id="cppCodeBlock0" style="display:none" border="0"></a></div><a href="https://www.appgamekit.com" target="_blank"><img class="logo" src="../../gfx/agk-logo.png" height="44" style="margin:15px 0" alt="App Game Kit" border="0"></a></div><img src="../../gfx/drop-shadow.png" width="1158" height="40" alt=""></div><div class="breadcrumbs">
<a href="../../home.html">Home</a> &gt; <a href="../../examples.html">Examples</a> &gt; Animating sprites - part 2</div><div class="page"><h1>Animating sprites - part 2</h1><h2>Description</h2><p>There are three options when it comes to animating a sprite. These are:</p><ul><li>load a series of images and manually update the sprites image using timers</li><li>add a series of images to a sprite and use the command <i>PlaySprite</i> to handle animation</li><li>use a texture atlas (a series of animation frames on one image), call <i>SetSpriteAnimation</i> to hook up atlas to the system, then call <i>PlaySprite</i> to handle animation</li></ul><p>In this example we’re going to examine the third option and see how to use a texture atlas.</p><div align="center"><img src="7_anim2.jpg"/></div><h2>External media</h2><p>This example program relies on a single image named "mole.png". This single image contains all of our animation frames bundled together. Here's what it looks like:</p><div align="center"><img src="mole.png"/></div><h2>Overview</h2><p>The process involved is as follows:</p><ul><li>load our animation image</li><li>create a sprite</li><li>apply animation information to our sprite</li><li>play our sprite animation</li><li>main loop where we update the contents of the screen</li></ul><h2>Load our animation image</h2><p>The animation image we are using in this example has all of the individual frames contained in this one image. It is treated just like any other image when it comes to loading:</p><div id="basicCodeBlock1" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">LoadImage ( 1, "mole.png" )
</pre></div><div align="right"><button class="btn" data-clipboard-text="LoadImage ( 1, &quot;mole.png&quot; )
">Copy Code</button></div><div id="cppCodeBlock2" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::LoadImage ( 1, "mole.png" );
</pre></div><p>If you examine this image in an image viewer you will notice how there are 11 individual mole frames. Later on we’ll tell AGK to only display one of these frames at a time.</p><h2>Create a sprite</h2><p>With our animation image already loaded it’s now time to create our sprite. An ID number of 1 is used for the sprite, followed by another 1 to indicate that this sprite uses image 1:</p><div id="basicCodeBlock3" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">CreateSprite ( 1, 1 )
SetSpritePosition ( 1, 125, 200 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="CreateSprite ( 1, 1 )
SetSpritePosition ( 1, 125, 200 )
">Copy Code</button></div><div id="cppCodeBlock4" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::CreateSprite ( 1, 1 );
agk::SetSpritePosition ( 1, 125, 200 );
</pre></div><h2>Apply animation information</h2><p>If you were to run the application at this point all of image 1 would be displayed. To ensure only specific frames are displayed we call the command <i>SetSpriteAnimation</i>. This has several parameters:</p><ul><li>ID number of the sprite</li><li>how large each frame is on the X axis</li><li>how large each frame is on the Y axis</li><li>how many frames exist</li></ul><p>Our image has 11 frames of animation and each one is of dimensions 82 x 88, therefore the call to <i>SetSpriteAnimation</i> should be:</p><div id="basicCodeBlock5" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">SetSpriteAnimation ( 1, 82, 88, 11 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="SetSpriteAnimation ( 1, 82, 88, 11 )
">Copy Code</button></div><div id="cppCodeBlock6" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::SetSpriteAnimation ( 1, 82, 88, 11 );
</pre></div><p>After making this call AGK knows enough information about the texture atlas, and it can display each frame individually.</p><h2>Playing a sprite</h2><p>Our sprite now has a texture atlas attached to it, along with vital animation information and we’re now in a position to animate it. All it takes is a call to the command <i>PlaySprite</i>. This command has several parameters:</p><ul><li>ID number for the sprite</li><li>how many frames per second should be displayed</li><li>whether the sprite is to loop or not</li><li>start frame for the animation</li><li>end frame for the animation</li></ul><p>For our example the ID number is 1, the frame rate is set to 10 (a higher value will make it play faster while a lower value will result in a slower animation), 1 is used to indicate the animation will loop, the start point gets set to frame 1 and finally the end frame is set to frame 11:</p><div id="basicCodeBlock7" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">PlaySprite ( 1, 10, 1, 1, 11 )
</pre></div><div align="right"><button class="btn" data-clipboard-text="PlaySprite ( 1, 10, 1, 1, 11 )
">Copy Code</button></div><div id="cppCodeBlock8" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">agk::PlaySprite ( 1, 10, 1, 1, 11 );
</pre></div><p>After calling <i>PlaySprite</i> the sprite will continually animate until such time that we choose to stop it.</p><h2>Main loop</h2><p>At this point everything is set up and ready to launch. All that remains is for our main loop to update the screen by making a simple call to <i>Sync</i>, as shown here:</p><div id="basicCodeBlock9" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">do
    Sync ( )
loop
</pre></div><div align="right"><button class="btn" data-clipboard-text="do
    Sync ( )
loop
">Copy Code</button></div><div id="cppCodeBlock10" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">void app::Loop ( void )
{
    agk::Sync ( );
}
</pre></div><h2>Full code listing</h2><p>Everything is now in place. Here's the final code for our program:</p><div id="basicCodeBlock11" style="border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre class="prettyprint lang-agk" style="margin:14px; font-size: 14px; white-space:pre-wrap;">SetVirtualResolution ( 320, 480 )
<br>
CreateSprite ( LoadImage ( "background.jpg" ) )
<br>
LoadImage ( 1, "mole.png" )
<br>
CreateSprite ( 1, 1 )
SetSpritePosition ( 1, 125, 200 )
<br>
SetSpriteAnimation ( 1, 82, 88, 11 )
<br>
PlaySprite ( 1, 10, 1, 1, 11 )
<br>
do
    Sync ( )
loop
</pre></div><div align="right"><button class="btn" data-clipboard-text="SetVirtualResolution ( 320, 480 )

CreateSprite ( LoadImage ( &quot;background.jpg&quot; ) )

LoadImage ( 1, &quot;mole.png&quot; )

CreateSprite ( 1, 1 )
SetSpritePosition ( 1, 125, 200 )

SetSpriteAnimation ( 1, 82, 88, 11 )

PlaySprite ( 1, 10, 1, 1, 11 )

do
    Sync ( )
loop
">Copy Code</button></div><div id="cppCodeBlock12" style="display:none; border: 1px solid #ccd; background: #f3f3fc; margin: 10px 0;"><pre style="margin:14px; font-size: 14px; white-space:pre-wrap;" class="prettyprint lang-cpp">void app::Begin ( void )
{
    agk::SetVirtualResolution ( 320, 480 );
<br>
    agk::CreateSprite ( agk::LoadImage ( "background.jpg" ) );
<br>
    agk::LoadImage ( 1, "mole.png" );
<br>
    agk::CreateSprite ( 1, 1 );
    agk::SetSpritePosition ( 1, 125, 200 );
<br>
    agk::SetSpriteAnimation ( 1, 82, 88, 11 );
<br>
    agk::PlaySprite ( 1, 10, 1, 1, 11 );
}
<br>
void app::Loop ( void )
{
    agk::Sync ( );
}
</pre></div><h2>Conclusion</h2><p>Animating sprites using a texture atlas can result in a minimal amount of code and be very efficient. For platforms where speed is of concern it’s advisable to use texture atlases.</p><br><br></div><div class="footer" style="background: #000 url('../../gfx/footer-back.png') top center no-repeat;"><div><p><a href="https://www.thegamecreators.com" target="_blank" style="float:none"><img style="float:right;margin-top:2px" src="../../gfx/tgc-logo.png" width="188" height="27" alt="" border="0"></a><br><strong>App Game Kit</strong> &nbsp;&copy; The Game Creators Ltd. All Rights Reserved.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="mailto:agkreports@thegamecreators.com" style="float:none"><font color="FFFFFF">Report an issue</font></a></p></p></div></div><script type="text/javascript">prettyPrint(true);</script></body></html>